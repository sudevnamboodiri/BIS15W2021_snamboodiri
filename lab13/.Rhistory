hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
}
shinyApp(ui, server)
View(UC_admit)
View(UC_admit)
knitr::opts_chunk$set(echo = TRUE)
UC_admit %>%
ggplot(aes(x = `Perc FR`, y = `Campus`, fill = `Ethnicity`)) + geom_bar()
UC_admit %>%
ggplot(aes(x = `Perc FR`, fill = `Ethnicity`)) + geom_bar()
UC_admit %>%
ggplot(aes(x = `Campus`, fill = `Ethnicity`)) + geom_bar()
UC_admit %>%
ggplot(aes(x = `Campus`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Year= 2001)
UC_admit %>%
filter(Year== 2001)
UC_admit %>%
filter(Year== '2001')
UC_admit %>%
filter(Adacemic_Yr== '2001')
UC_admit %>%
filter(Adacemic_Yr== 2001)
UC_admit %>%
filter(Adacemic_Yr== 2019)
UC_admit %>%
filter(Academic_Yr== 2019)
ggplot(aes(x = `Campus`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Perc FR`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Category`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `FilteredCountFR`, fill = `Ethnicity`)) + geom_bar(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, fill = `Ethnicity`)) + geom_point()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`)) + geom_point()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`)) + geom_line()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`)) + geom_point()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`, group = `Ethnicity`)) + geom_point()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`, group = `Ethnicity`)) + geom_line()
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`, group = `Ethnicity`)) + geom_point()
UC_admit %>%
#filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Campus`, y = `Perc FR`, color = `Ethnicity`, group = `Ethnicity`)) + geom_point()
UC_admit %>%
#filter(Academic_Yr== 2019)%>%
ggplot(aes(x = `Academic_Yr`, y = `Perc FR`, color = `Ethnicity`, group = `Ethnicity`)) + geom_point()
runApp('plot_iris.R')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = Campus, y = `Perc Rate`, fill = `Ethnicity`)) + geom_col(poisition = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(poisition = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Campus, y = `FilteredCountFR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
glimpse(UC_admit)
UC_admit %>%
UC_admit[`Perc FR`]
glimpse(UC_admit)
UC_admit %>%
UC_admit[1]
glimpse(UC_admit)
UC_admit %>%
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))/100
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))/100
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))/100
glimpse(UC_admit)
UC_admit <- readr::read_csv("data/UC_admit.csv")
glimpse(UC_admit)
#UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))/100
#glimpse(UC_admit)
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
#glimpse(UC_admit)
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
glimpse(UC_admit)
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis')
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
filter(Category == 'Applicants')
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
filter(Category == 'Applicants') %>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Campus, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
#ui <- fluidPage(
#   selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
#  selectInput("Campus", "Select Campus", choices = choices=unique(UC_admit$Campus)),
#  plotOutput("plot", width = "500px", height = "400px")
#)
#server <- function(input, output) {
# output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point() + theme_light(base_size = 18)
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices = choices=unique(UC_admit$Campus)),
UC_admit %>%
filter(Academic_Yr== 2019)%>%
filter(Campus == 'Davis') %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point() + theme_light(base_size = 18)
})
}
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge')
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge') +labs(axis = 60)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge') +labs(x.axis = 60)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge') +theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`)) + geom_col(position = 'dodge') + geom_text(size = 3, position = position_stack(vjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`, label = `Perc FR`)) + geom_col(position = 'dodge') + geom_text(size = 3, position = position_stack(vjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`, label = `Perc FR`)) + geom_col(position = 'dodge') + geom_text(size = 3) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`, label = `Perc FR`)) + geom_col(position = 'dodge') + geom_text(size = 3) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`, label = `Perc FR`)) + geom_col(position = 'dodge') + geom_text(size = 3) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Year, y = `Perc FR`)) + geom_point() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`)) + geom_point() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
UC_admit$Academic_Yr <- ymd(UC_admit$Academic_Yr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
library(lubridate)
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
UC_admit$Academic_Yr <- ymd(UC_admit$Academic_Yr)
glimpse(UC_admit)
UC_admit <- readr::read_csv("data/UC_admit.csv")
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
glimpse(UC_admit)
glimpse(UC_admit)
UC_admit$`Perc FR` <- as.numeric(sub("%","",UC_admit$`Perc FR`))
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
glimpse(UC_admit)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`)) + geom_point() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`)) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`, group = 1)) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`, group = 1, color = 'blue')) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`, group = 1)) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`, group = 1)) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Year", "Select Academic Year", choices=unique(UC_admit$Academic_Yr)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr== input$Year)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Ethnicity, y = `Perc FR`, fill = `Ethnicity`, label = `Perc FR`)) + geom_col(position = 'dodge') + geom_text(size = 3) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("Ethnicity", "Select Ethnicity", choices=unique(UC_admit$Ethnicity)),
selectInput("Campus", "Select Campus", choices=unique(UC_admit$Campus)),
selectInput("Category", "Select Category", choices=unique(UC_admit$Category)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity== input$Ethnicity)%>%
filter(Campus == input$Campus) %>%
filter(Category == input$Category) %>%
ggplot(aes(x = Academic_Yr, y = `Perc FR`, group = 1)) + geom_point() + geom_line() + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text=element_text(size=12))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny); runApp('Rhw13script1.R')
runApp('Rhw13script1.R')
runApp('Rhw13script1.R')
runApp('Rhw13script1.R')
runApp('Rhw13script1.R')
library(shiny); runApp('lab13hwscript2.R')
runApp('lab13hwscript2.R')
runApp('Rhw13script1.R')
